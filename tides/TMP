
      write(*,*) 'a = ', a

      call vector_product(r, v, r_times_v)
      call vector_product(r, omega, r_times_omega)
      do i = 1, 3
        a(i) = -3.d0*k_2*Gm_star*capR**5/r_sq**5 * Delta_t
     :    * ( 2.d0*r(i)*dot_product(r,v) + r_sq*(r_times_omega(i)+v(i)))

        T(i) = -3.d0*k_2*Gm_star*capR**5/r_sq**4 * Delta_t
     :    * ( dot_product(r,omega)*r(i) - r_sq*omega(i) + r_times_v(i))
      enddo
      write(*,*) 'a = ', a
      write(*,*) 'T = ', T

      write(*,*) dot_product(r,omega)*r
      write(*,*) r_sq*omega
      write(*,*) r_times_v


c we simply assume that the units are [G] = 1, [GM] = AU^3/day^2.

c                if ((i.eq.1).and.(j.eq.2).and.(k.eq.2)) then  ! dbg
c                  write(*,*) a(1), a(2), a(3)
c                  write(*,*) T(1), T(2), T(3)
c                endif


c geocentric
      do i = 1, nbod
          r = sqrt((xh(i)-xh(2))**2 + (yh(i)-yh(2))**2
     :      + (zh(i)-zh(2))**2)  ! 1st planet instead?
        mean_motion = sqrt((mass(2)+mass(i))/r**3)
        omega_rad_per_day = omega(i)*day
        Q = 3.d0 / (2.d0*(omega_rad_per_day - mean_motion)
     :    * k_2(i)*Delta_t(i))
        write(*,*) -i, r*149.6d6, mean_motion, Q
      enddo

      k1 = 3.d0*Gm_star * capR**5 * k_2 * Delta_t
     :  / ((sqrt(r_dash_sq*r_sq))**5)

c 
      Delta_t = 3.d0/(2.d0 * n * k_2 * Q)
      ( omega - n ) Delta_t = delta
      tan delta =~ 1/Q
      

      do i = 1, nbod
      enddo

